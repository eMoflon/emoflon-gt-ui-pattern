/*
 * generated by Xtext 2.12.0
 */
package org.moflon.gt.mosl.pattern.language.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.moflon.gt.mosl.pattern.language.moslPattern.Definition
import org.moflon.gt.mosl.pattern.language.moslPattern.GraphTransformationPatternFile
import org.moflon.gt.mosl.pattern.language.moslPattern.Import
import org.moflon.gt.mosl.pattern.language.moslPattern.PatternModule
import org.moflon.gt.mosl.pattern.language.services.MOSLPatternGrammarAccess

class MOSLPatternFormatter extends AbstractFormatter2 {
	
	@Inject extension MOSLPatternGrammarAccess

	def dispatch void format(GraphTransformationPatternFile graphTransformationPatternFile, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Import _import : graphTransformationPatternFile.getImports()) {
			_import.format;
		}
		for (PatternModule patternModule : graphTransformationPatternFile.getModules()) {
			patternModule.format;
		}
	}

	def dispatch void format(PatternModule patternModule, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Definition definition : patternModule.getDefinitions()) {
			definition.format;
		}
	}
	
	// TODO: implement for ConstraintDef, PatternDef, ComplexAttributeConstraints, Constraint, ObjectVariablePattern, NACGroup, AttributeConstraint, AttributeAssignment, LinkVariablePattern
}
